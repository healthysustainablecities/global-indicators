"""
Generate global urban heat vulnerability index (GUHVI) through use of the Google Earth Engine API
"""
import sys
import time

# Import Earth Engine and Google Earth Engine Map libraries
import ee
import geemap
import psycopg2
import geopandas as gpd

# import getpass
from script_running_log import script_running_log
from sqlalchemy import text

import ghsci


def fetch_data_as_gdf(r: ghsci.Region) -> tuple:
    """Fetch urban study region and AOS public OSM data as GeoDataFrames."""
    # Fetch urban study region data
    with r.engine.connect() as connection:
        urban_study_region_gdf = gpd.read_postgis(
            """
            SELECT ST_Transform(geom, 4326) AS geom
            FROM urban_study_region;
            """,
            connection,
            geom_col='geom',
        )
        
    return urban_study_region_gdf

def setup_guhvi_grid(codename, r):
    """Setup 1km grid and attribute ocean overlap percentage to each cell"""


def setup_guhvi_functions(codename, r):
    """Setup and normalisation functions""" 
    

def compute_hottest_third_of_the_year(codename, r):
    """Compute hottest third of the year date range for use in sub-index and overall vulnerability index computation""" 
    
    
def compute_heat_exposure_index(codename, r):
    """Compute heat exposure index""" 
    
    
def compute_heat_sensitivity_index(codename, r):
    """Compute heat sensitivity index""" 

    
def compute_adaptive_capability_index(codename, r):
    """Compute adaptive capability index""" 

    
def compute_heat_vulnerability_index(codename, r):
    """Composite three sub-indexes to create overall heat vulnerability index""" 

    
def guhvi_upload_queries(r, ghsci):
    """Upload GUHVI data directly to the database using SQL queries."""    

    
def global_urban_heat_vulnerability_index(codename):
    # simple timer for log file
    start = time.time()
    script = '_08_global_urban_heat_vulnerability_index'
    task = 'Compute Global Urban Heat Vulnerability Index (GUHVI)'
    r = ghsci.Region(codename)
    # Generate and upload GUHVI data
    setup_guhvi_grid(codename, r)
    setup_guhvi_functions(codename, r)
    compute_hottest_third_of_the_year(codename, r)
    compute_heat_exposure_index(codename, r)
    compute_heat_sensitivity_index(codename, r)
    compute_heat_sensitivity_index(codename, r)
    compute_adaptive_capability_index(codename, r)
    compute_heat_vulnerability_index(codename, r)
    guhvi_upload_queries(r, ghsci)
    # output to completion log
    script_running_log(r.config, script, task, start)
    r.engine.dispose()


def main():
    try:
        codename = sys.argv[1]
    except IndexError:
        codename = None
    global_urban_heat_vulnerability_index(codename)


if __name__ == '__main__':
    main()